pluginManagement {
    // Use full path to node for M1/M2 Macs
    def nodeExecutable = '/opt/homebrew/bin/node'

    def reactNativeGradlePlugin = new File(
            providers.exec {
                workingDir(rootDir)
                commandLine(nodeExecutable, "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })")
            }.standardOutput.asText.get().trim()
    ).getParentFile().absolutePath
    includeBuild(reactNativeGradlePlugin)

    def expoPluginsPath = new File(
            providers.exec {
                workingDir(rootDir)
                commandLine(nodeExecutable, "--print", "require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })")
            }.standardOutput.asText.get().trim(),
            "../android/expo-gradle-plugin"
    ).absolutePath
    includeBuild(expoPluginsPath)
}

plugins {
    id("com.facebook.react.settings")
    id("expo-autolinking-settings")
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
    if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
        ex.autolinkLibrariesFromCommand()
    } else {
        ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)
    }
}
expoAutolinking.useExpoModules()

rootProject.name = 'movie-app-fixed'

expoAutolinking.useExpoVersionCatalog()

include ':app'
includeBuild(expoAutolinking.reactNativeGradlePlugin)
